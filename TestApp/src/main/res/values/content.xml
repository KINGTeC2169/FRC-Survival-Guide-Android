<?xml version="1.0" encoding="utf-8"?>
<resources>
    <!-- LAYOUT OF CONTENT
     <string-array name="RESOURCE-ID">
        <item>TITLE</item>
        <item>MAIN TEXT</item>
        <item>IMAGE NAME</item>
        <item>TAGS</item>
    </string-array> -->
    <!-- TAGS SHOULD BE SEPARATED BY SPACES-->

    <!-- LINKS IN THE BODY TEXT SHOULD BE FORMATTED AS
        &lt;a href="ADDRESS">NAME&lt;/a> -->
    <!-- LINE BREAKS SHOULD BE FORMATTED AS
        &lt;br> -->

    <!-- Week One -->

    <string-array name="brainstorming">
        <item>Brainstorming</item>
        <item>Leaving Kickoff, the first thing your team should begin doing is
            brainstorming. No idea is a bad idea here, and this is the time to come up with all kinds of
            crazy designs. During this time you should begin planning strategy and deciding how and what
            you want your robot to do.</item>
        <item>ic_kt</item>
        <item></item>
    </string-array>

    <string-array name="approaching_the_game">
        <item>Approaching the Game</item>
        <item>Before thinking about how your robot could accomplish the
            game, it is important for you to decide what you want to accomplish! You\'ll need a
            game-plan before you can design a robot. In order to design a robot around the best
            strategy, KING TeC stages a mock game using human players instead of robots immediately
            after Kickoff, revealing any strategies that may otherwise be overlooked.</item>
        <item>ic_kt</item>
        <item></item>
    </string-array>

    <string-array name="game_rules">
        <item>Game Rules</item>
        <item>Fully understanding the rules of the new game is critical to the design
            process. Everyone on the team should read the rules at least once and your team should
            appoint a Rules Master, someone who your team can defer to for all rules-related questions.</item>
        <item>ic_kt</item>
        <item></item>
    </string-array>

    <string-array name="getting_materials">
        <item>Getting Materials</item>
        <item>While the details of your design may not be set in stone, it is important for your
            team to begin purchasing materials, especially materials that need to be shipped.
            Unfortunately you can\'t build a robot without supplies, and it is much better to be
            waiting for them during Weeks One and Two than during Week Six.
            &lt;br>
            Have your team put together a list of expected materials, and don\'t forget to
            include extras for any parts you think might break.
            Your priority should be getting the parts you need to start building!</item>
        <item>ic_kt</item>
        <item></item>
    </string-array>

    <!-- Week Two -->

    <string-array name="prototyping">
        <item>Prototyping</item>
        <item>The teams on Einstein Field at the FRC World Championship consistently do one thing right.
            They test and test repeatedly, designing and breaking components of their robot before even
            thinking about assembling them into a finalized design. Prototyping allows teams to find
            flaws in their designs and fix them before it cuts into the crucial later weeks, where time
            and resources need to be spent on programming and drive practice.
            &lt;br>
            KING TeC assembles smaller two/three man teams that work on individual components of the
            robot. How you prototype is up to your team, but it is important to keep the process moving.
            Don\'t let a failure in one part constitute a failure as a whole!</item>
        <item>ic_kt</item>
        <item></item>
    </string-array>

    <string-array name="chassis_building">
        <item>Building the Chassis</item>
        <item>Although you may not have a completely finalized robot design at this point in time, it is
            extremely important that you begin building the chassis. The drive-train is the heart of almost
            every robot design out there, and it is important to get a driving robot as soon as possible. Not
            only will having driving robot guarantee you some level of success on the field, without a
            frame the components and modules you are prototyping will have nowhere to go!</item>
        <item>ic_kt</item>
        <item></item>
    </string-array>

    <string-array name="drive_practice">
        <item>Drive Practice</item>
        <item>When competing at competition, nothing can make or break your teams experience than how
            your drivers work together and with the robot. While six weeks is not a lot of time to build
            a robot, it is important to find time to let your drivers practice. The earlier the better,
            but the season goes fast and we often are only able to practice driving during the last few
            days of the build season.</item>
        <item>ic_kt</item>
        <item></item>
    </string-array>

    <!-- Week Four -->

    <string-array name="early_programming">
        <item>Getting Started Programming</item>
        <item>In order to test your robot, you need to be able to control it. Start with the basics,
            and begin programming one subsystem at a time. It is important to remember that you
            shouldn\'t worry about perfecting the code at this time; save the fine-tuning and control
            loops for later. As long as you can control the subsystems at this point, and are able to
            read from any sensors that you might have, you\'re doing fine.</item>
        <item>ic_kt</item>
        <item></item>
    </string-array>

    <!-- Week Five -->

    <string-array name="main_programming">
        <item>Programming</item>
        <item>By this point, you should be able to control every part of your robot. It is time to
            stop working on implementing new features and perfect the ones you have. This is the time
            to create control loops which make the driver\'s job easier, such as a PID controller.
            Make sure to check if existing functions are available before trying to implement your
            own; they will be easier to use and are much less likely to contain bugs than code you or
            your team writes.
            &lt;br>
            One of the features that is not stressed enough in FRC programming is code reuse.
            When writing the functions for this year\'s robot, think about how you can write the code
            so that it is still viable next year. Although your robot will change from year to year,
            there is no reason you cannot recycle some of the programming ideas and implementations.
            However, you may be required to release the code as open-source if you plan to use code
            from previous years, in order to comply with
            &lt;a href="http://frc-manual.usfirst.org/viewItem/285">R16&lt;/a> of the
            &lt;a href="http://frc-manual.usfirst.org/viewItem/3">Game Manual&lt;/a>.</item>
        <item>ic_kt</item>
        <item></item>
    </string-array>

    <!-- Week Six -->

    <string-array name="tweaking_programming">
        <item>Tweaking Programming</item>
        <item>While you hopefully have the main functionality of your robot programmed by this point,
            odds are you won\'t get everything perfect the first time. Your programmers should be focusing
            on fixing the major bugs and getting everything working, but after that it is time to bring
            in the drive team.
            &lt;br>
            Although programmers like to think they know everything about the robot,
            it is important to remind them that they most likely won\'t be driving it at competition.
            If they will be, your team has lucked out! If not, the programmers should sit down with the
            drive team and fine tune the controls until the drivers are content.</item>
        <item>ic_kt</item>
        <item></item>
    </string-array>

    <string-array name="late_build_changes">
        <item>Building the Unexpected</item>
        <item>Like the real world, build season is often full of unexpected surprises. In the case of
            a robot-building emergency, don\'t panic. Last minute changes happen on every team, and the
            important thing to remember is that you can continue building after the six weeks are over.
            &lt;br>
            You are allowed to bring a small amount of robot-related parts to competition, which means
            you can manufacture parts at home and install them on the first day of competition.</item>
        <item>ic_kt</item>
        <item></item>
    </string-array>

    <string-array name="bag_and_tag">
        <item>Bagging and Tagging</item>
        <item>While in the past your robot had to be crated up, in recent years a new procedure for sealing
            away your robot has been unveiled. All official events with the exception of the Championship are
            "Bag and Tag" events, meaning that your robot must be suffocated by a giant bag on the last day
            of Build Season. More information is available in the
            &lt;a href="http://frc-manual.usfirst.org/viewItem/8">administrative manual&lt;/a>.</item>
        <item>ic_kt</item>
        <item></item>
    </string-array>
</resources>